project.ext.ideaActive = System.getProperty('idea.active') == 'true'

kotlin {
    targets {
        def manager = project.ext.hostManager
        def linuxEnabled = manager.isEnabled(presets.linuxX64.konanTarget)
        def macosEnabled = manager.isEnabled(presets.macosX64.konanTarget)
        def winEnabled = manager.isEnabled(presets.mingwX64.konanTarget)

        project.ext.isLinuxHost = linuxEnabled
        project.ext.isMacosHost = macosEnabled
        project.ext.isWinHost = winEnabled
    }
}

project.ext.sourceSetSuffixes = ["Main", "Test"]

def configureNativeSourceSetPreset(name, preset) {
    def hostMainCompilation = project.kotlin.targetFromPreset(preset).compilations.main
    def compileConfiguration = configurations[hostMainCompilation.compileDependencyConfigurationName]
    def hostNativePlatformLibs = files(provider {
        compileConfiguration.findAll {
            it.path.endsWith(".klib") || it.absolutePath.contains("klib${File.separator}platform")
        }
    })
    for (suffix in project.ext.sourceSetSuffixes) {
        configure(kotlin.sourceSets[name + suffix]) {
            dependencies.add(implementationMetadataConfigurationName, hostNativePlatformLibs)
        }
    }
}

def defineSourceSet(newName, dependsOn) {
    for (suffix in project.ext.sourceSetSuffixes) {
        def newSourceSet = kotlin.sourceSets.create(newName + suffix)
        for (child in dependsOn) {
            kotlin.sourceSets[child.name + suffix].dependsOn newSourceSet
        }
    }
}

project.ext.createUmbrellaSourceSets = { name, platforms, preset ->
    defineSourceSet(name, platforms)
    if (project.ext.ideaActive) {
        configureNativeSourceSetPreset(name, preset)
    }
}

def java_version = System.properties["java.version"]

switch (java_version) {
    case '1.8.0_191':
    case '1.8.0_192':
    case '1.8.0_201':
    case '1.8.0_202':
    case '1.8.0_211':
    case '1.8.0_212':
        project.ext.jetty_alpn_boot_version = "8.1.13.v20181017"
        break
    default:
        project.ext.jetty_alpn_boot_version = "8.1.12.v20180117"
        break
}
